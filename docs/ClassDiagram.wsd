@startuml ResourceManager.js
abstract class ResourceFileHandler
{
    + ResourceFileHandler()
    + CheckApplicability(string fileName) : bool
    + Create(string fileName) : FileResouce
}

abstract class Resource
{
    - locale : CultureInfo
    + Resource(CultureInfo locale)
    + Locale { get; set; } : CultureInfo
    # ResourceStore { get; } : object
    + Get<T>(string id) : T
    + Exists(string id) : bool
}

class ResourceManager
{
    + ResourceManager(string baseFileName)
    + ResourceManager(string baseFileName, CultureInfo locale)
    + ResourceManager(Resource[] resources)
    + ResourceManager(Resource[] resources, CultureInfo locale)
    + Locale { get; set; } : CultureInfo
    # ResourceFileHandlers { get; } : ResourceFileHandler[]
    # Resources { get; } : Resource[]
    + Get<T>(string id) : T
    # ResourceFromFile(string fileName) : FileResouce
}

class FileResource
{
    + Cached { get; set; } : bool
    # ParseFile(string fileName) : object
}

class JSONResource
{
}

class YAMLResource
{
}

class JavaScriptResource
{
}

JSONResource --|> FileResource
YAMLResource --|> FileResource
JavaScriptResource --|> FileResource
FileResource -|> Resource
Resource -* ResourceManager
ResourceFileHandler --* ResourceManager
@enduml