@startuml ResourceManager.js
interface IResourceFileHandler
{
    CheckApplicability(string fileName) : bool
    Create(string fileName) : FileResource
}


ResourceFileHandler -|> IResourceFileHandler

abstract class ResourceFileHandler<T extends FileResource>
{
    + ResourceFileHandler()
    + {abstract} CheckApplicability(string fileName) : bool
    + {abstract} Create(string fileName) : T
    + {abstract} Create(string fileName, CultureInfo locale) : T
}

JSONResourceHandler --|> ResourceFileHandler

class JSONResourceHandler
{
    + JSONResourceHandler()
    + CheckApplicability(string fileName) : bool
    + Create(string fileName, CultureInfo locale) : JSONResourceHandler
}

abstract class Resource
{
    - locale : CultureInfo
    + Resource()
    + Resource(CultureInfo locale)
    + Locale { get; } : CultureInfo
    # {abstract} ResourceStore { get; } : object
    + Get<T>(string id) : T
    + Exists(string id) : bool
}

Resource -* ResourceManager
ResourceFileHandler --* ResourceManager

class ResourceManager
{
    + ResourceManager(string baseFileName)
    + ResourceManager(string baseFileName, CultureInfo locale)
    + ResourceManager(Resource[] resources)
    + ResourceManager(Resource[] resources, CultureInfo locale)
    + Locale { get; set; } : CultureInfo
    # ResourceFileHandlers { get; } : ResourceFileHandler[]
    # Resources { get; } : Resource[]
    + Get<T>(string id) : T
    # ResourceFromFile(string fileName) : FileResouce
}

FileResource -|> Resource

abstract class FileResource
{
    - fileName : string
    - cached : bool
    - cache : object
    + FileResource(string fileName)
    + FileResource(string fileName, CultureInfo locale)
    + FileName { get; } : string
    + Cached { get; set; } : bool
    # Cache { get; set; } : object
    # ResourceStore { get; } : object
    + Refresh() : void
    # {abstract} Load() : object
}

JSONResource --|> FileResource

class JSONResource
{
    + JSONResource(string fileName, CultureInfo locale)
    # Load() : void
}

YAMLResource --|> FileResource

class YAMLResource
{
}

JavaScriptResource --|> FileResource

class JavaScriptResource
{
}
@enduml